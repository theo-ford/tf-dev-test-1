// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

type PageDocumentDataSlicesSlice =
  | ReactPlayerVimeoSlice
  | ReactPlayerMp4Slice
  | RichTextSlice;

/**
 * Content for Page documents
 */
interface PageDocumentData {
  /**
   * Title field in *Page*
   *
   * - **Field Type**: Title
   * - **Placeholder**: *None*
   * - **API ID Path**: page.title
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.TitleField;

  /**
   * Slice Zone field in *Page*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: page.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PageDocumentDataSlicesSlice> /**
   * Meta Title field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: page.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *Page*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: page.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *Page*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: page.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * Page document from Prismic
 *
 * - **API ID**: `page`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<Simplify<PageDocumentData>, "page", Lang>;

interface ProjectOneDocumentData {}

/**
 * Project One document from Prismic
 *
 * - **API ID**: `project_one`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ProjectOneDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ProjectOneDocumentData>,
    "project_one",
    Lang
  >;

export type AllDocumentTypes = PageDocument | ProjectOneDocument;

/**
 * Primary content in *ReactPlayerMp4 → Default → Primary*
 */
export interface ReactPlayerMp4SliceDefaultPrimary {
  /**
   * Video field in *ReactPlayerMp4 → Default → Primary*
   *
   * - **Field Type**: Link to Media
   * - **Placeholder**: *None*
   * - **API ID Path**: react_player_mp4.default.primary.video
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  video: prismic.LinkToMediaField<prismic.FieldState, never>;
}

/**
 * Default variation for ReactPlayerMp4 Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ReactPlayerMp4SliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ReactPlayerMp4SliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ReactPlayerMp4*
 */
type ReactPlayerMp4SliceVariation = ReactPlayerMp4SliceDefault;

/**
 * ReactPlayerMp4 Shared Slice
 *
 * - **API ID**: `react_player_mp4`
 * - **Description**: ReactPlayerMp4
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ReactPlayerMp4Slice = prismic.SharedSlice<
  "react_player_mp4",
  ReactPlayerMp4SliceVariation
>;

/**
 * Primary content in *ReactPlayerVimeo → Default → Primary*
 */
export interface ReactPlayerVimeoSliceDefaultPrimary {
  /**
   * Vimeo Embed field in *ReactPlayerVimeo → Default → Primary*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: react_player_vimeo.default.primary.vimeo_embed
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  vimeo_embed: prismic.EmbedField;
}

/**
 * Default variation for ReactPlayerVimeo Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ReactPlayerVimeoSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ReactPlayerVimeoSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ReactPlayerVimeo*
 */
type ReactPlayerVimeoSliceVariation = ReactPlayerVimeoSliceDefault;

/**
 * ReactPlayerVimeo Shared Slice
 *
 * - **API ID**: `react_player_vimeo`
 * - **Description**: ReactPlayerVimeo
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ReactPlayerVimeoSlice = prismic.SharedSlice<
  "react_player_vimeo",
  ReactPlayerVimeoSliceVariation
>;

/**
 * Primary content in *RichText → Default → Primary*
 */
export interface RichTextSliceDefaultPrimary {
  /**
   * Content field in *RichText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: Lorem ipsum...
   * - **API ID Path**: rich_text.default.primary.content
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  content: prismic.RichTextField;
}

/**
 * Default variation for RichText Slice
 *
 * - **API ID**: `default`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<RichTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *RichText*
 */
type RichTextSliceVariation = RichTextSliceDefault;

/**
 * RichText Shared Slice
 *
 * - **API ID**: `rich_text`
 * - **Description**: RichText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type RichTextSlice = prismic.SharedSlice<
  "rich_text",
  RichTextSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  interface CreateWriteClient {
    (
      repositoryNameOrEndpoint: string,
      options: prismic.WriteClientConfig,
    ): prismic.WriteClient<AllDocumentTypes>;
  }

  interface CreateMigration {
    (): prismic.Migration<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      PageDocument,
      PageDocumentData,
      PageDocumentDataSlicesSlice,
      ProjectOneDocument,
      ProjectOneDocumentData,
      AllDocumentTypes,
      ReactPlayerMp4Slice,
      ReactPlayerMp4SliceDefaultPrimary,
      ReactPlayerMp4SliceVariation,
      ReactPlayerMp4SliceDefault,
      ReactPlayerVimeoSlice,
      ReactPlayerVimeoSliceDefaultPrimary,
      ReactPlayerVimeoSliceVariation,
      ReactPlayerVimeoSliceDefault,
      RichTextSlice,
      RichTextSliceDefaultPrimary,
      RichTextSliceVariation,
      RichTextSliceDefault,
    };
  }
}
